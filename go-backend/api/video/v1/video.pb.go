// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: video/v1/video.proto

package v1

import (
	v1 "go-backend/api/common/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 上传状态枚举
type UploadStatus int32

const (
	UploadStatus_UPLOAD_STATUS_UNKNOWN    UploadStatus = 0
	UploadStatus_UPLOAD_STATUS_UPLOADING  UploadStatus = 1 // 上传中
	UploadStatus_UPLOAD_STATUS_PROCESSING UploadStatus = 2 // 处理中
	UploadStatus_UPLOAD_STATUS_COMPLETED  UploadStatus = 3 // 完成
	UploadStatus_UPLOAD_STATUS_FAILED     UploadStatus = 4 // 失败
)

// Enum value maps for UploadStatus.
var (
	UploadStatus_name = map[int32]string{
		0: "UPLOAD_STATUS_UNKNOWN",
		1: "UPLOAD_STATUS_UPLOADING",
		2: "UPLOAD_STATUS_PROCESSING",
		3: "UPLOAD_STATUS_COMPLETED",
		4: "UPLOAD_STATUS_FAILED",
	}
	UploadStatus_value = map[string]int32{
		"UPLOAD_STATUS_UNKNOWN":    0,
		"UPLOAD_STATUS_UPLOADING":  1,
		"UPLOAD_STATUS_PROCESSING": 2,
		"UPLOAD_STATUS_COMPLETED":  3,
		"UPLOAD_STATUS_FAILED":     4,
	}
)

func (x UploadStatus) Enum() *UploadStatus {
	p := new(UploadStatus)
	*p = x
	return p
}

func (x UploadStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v1_video_proto_enumTypes[0].Descriptor()
}

func (UploadStatus) Type() protoreflect.EnumType {
	return &file_video_v1_video_proto_enumTypes[0]
}

func (x UploadStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadStatus.Descriptor instead.
func (UploadStatus) EnumDescriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{0}
}

// 视频统计更新类型
type UpdateVideoStatsType int32

const (
	UpdateVideoStatsType_UPDATE_VIDEO_STATS_UNKNOWN        UpdateVideoStatsType = 0
	UpdateVideoStatsType_UPDATE_VIDEO_STATS_FAVORITE_COUNT UpdateVideoStatsType = 1 // 点赞数
	UpdateVideoStatsType_UPDATE_VIDEO_STATS_COMMENT_COUNT  UpdateVideoStatsType = 2 // 评论数
	UpdateVideoStatsType_UPDATE_VIDEO_STATS_PLAY_COUNT     UpdateVideoStatsType = 3 // 播放数
	UpdateVideoStatsType_UPDATE_VIDEO_STATS_SHARE_COUNT    UpdateVideoStatsType = 4 // 分享数
)

// Enum value maps for UpdateVideoStatsType.
var (
	UpdateVideoStatsType_name = map[int32]string{
		0: "UPDATE_VIDEO_STATS_UNKNOWN",
		1: "UPDATE_VIDEO_STATS_FAVORITE_COUNT",
		2: "UPDATE_VIDEO_STATS_COMMENT_COUNT",
		3: "UPDATE_VIDEO_STATS_PLAY_COUNT",
		4: "UPDATE_VIDEO_STATS_SHARE_COUNT",
	}
	UpdateVideoStatsType_value = map[string]int32{
		"UPDATE_VIDEO_STATS_UNKNOWN":        0,
		"UPDATE_VIDEO_STATS_FAVORITE_COUNT": 1,
		"UPDATE_VIDEO_STATS_COMMENT_COUNT":  2,
		"UPDATE_VIDEO_STATS_PLAY_COUNT":     3,
		"UPDATE_VIDEO_STATS_SHARE_COUNT":    4,
	}
)

func (x UpdateVideoStatsType) Enum() *UpdateVideoStatsType {
	p := new(UpdateVideoStatsType)
	*p = x
	return p
}

func (x UpdateVideoStatsType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateVideoStatsType) Descriptor() protoreflect.EnumDescriptor {
	return file_video_v1_video_proto_enumTypes[1].Descriptor()
}

func (UpdateVideoStatsType) Type() protoreflect.EnumType {
	return &file_video_v1_video_proto_enumTypes[1]
}

func (x UpdateVideoStatsType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateVideoStatsType.Descriptor instead.
func (UpdateVideoStatsType) EnumDescriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{1}
}

// 获取视频流请求
type GetFeedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LatestTime    int64                  `protobuf:"varint,1,opt,name=latest_time,json=latestTime,proto3" json:"latest_time,omitempty"` // 时间戳，可选
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                              // 可选
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeedRequest) Reset() {
	*x = GetFeedRequest{}
	mi := &file_video_v1_video_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedRequest) ProtoMessage() {}

func (x *GetFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedRequest.ProtoReflect.Descriptor instead.
func (*GetFeedRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{0}
}

func (x *GetFeedRequest) GetLatestTime() int64 {
	if x != nil {
		return x.LatestTime
	}
	return 0
}

func (x *GetFeedRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 获取视频流响应
type GetFeedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *v1.BaseResponse       `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *GetFeedData           `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeedResponse) Reset() {
	*x = GetFeedResponse{}
	mi := &file_video_v1_video_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedResponse) ProtoMessage() {}

func (x *GetFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedResponse.ProtoReflect.Descriptor instead.
func (*GetFeedResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{1}
}

func (x *GetFeedResponse) GetBase() *v1.BaseResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetFeedResponse) GetData() *GetFeedData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetFeedData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NextTime      int64                  `protobuf:"varint,1,opt,name=next_time,json=nextTime,proto3" json:"next_time,omitempty"`
	VideoList     []*v1.Video            `protobuf:"bytes,2,rep,name=video_list,json=videoList,proto3" json:"video_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFeedData) Reset() {
	*x = GetFeedData{}
	mi := &file_video_v1_video_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFeedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFeedData) ProtoMessage() {}

func (x *GetFeedData) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFeedData.ProtoReflect.Descriptor instead.
func (*GetFeedData) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{2}
}

func (x *GetFeedData) GetNextTime() int64 {
	if x != nil {
		return x.NextTime
	}
	return 0
}

func (x *GetFeedData) GetVideoList() []*v1.Video {
	if x != nil {
		return x.VideoList
	}
	return nil
}

// 视频上传请求 - 支持两种方式
type PublishVideoRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Token string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // 必需
	// Types that are valid to be assigned to DataSource:
	//
	//	*PublishVideoRequest_Data
	//	*PublishVideoRequest_FileInfo
	DataSource    isPublishVideoRequest_DataSource `protobuf_oneof:"data_source"`
	Title         string                           `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"` // 视频标题
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishVideoRequest) Reset() {
	*x = PublishVideoRequest{}
	mi := &file_video_v1_video_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishVideoRequest) ProtoMessage() {}

func (x *PublishVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishVideoRequest.ProtoReflect.Descriptor instead.
func (*PublishVideoRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{3}
}

func (x *PublishVideoRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *PublishVideoRequest) GetDataSource() isPublishVideoRequest_DataSource {
	if x != nil {
		return x.DataSource
	}
	return nil
}

func (x *PublishVideoRequest) GetData() []byte {
	if x != nil {
		if x, ok := x.DataSource.(*PublishVideoRequest_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *PublishVideoRequest) GetFileInfo() *FileUploadInfo {
	if x != nil {
		if x, ok := x.DataSource.(*PublishVideoRequest_FileInfo); ok {
			return x.FileInfo
		}
	}
	return nil
}

func (x *PublishVideoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type isPublishVideoRequest_DataSource interface {
	isPublishVideoRequest_DataSource()
}

type PublishVideoRequest_Data struct {
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3,oneof"` // 二进制数据方式
}

type PublishVideoRequest_FileInfo struct {
	FileInfo *FileUploadInfo `protobuf:"bytes,3,opt,name=file_info,json=fileInfo,proto3,oneof"` // 文件信息方式
}

func (*PublishVideoRequest_Data) isPublishVideoRequest_DataSource() {}

func (*PublishVideoRequest_FileInfo) isPublishVideoRequest_DataSource() {}

// 文件上传信息
type FileUploadInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                          // 原始文件名
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"` // MIME类型
	FileSize      int64                  `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`         // 文件大小
	UploadId      string                 `protobuf:"bytes,4,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`          // 上传ID（可选，用于断点续传）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadInfo) Reset() {
	*x = FileUploadInfo{}
	mi := &file_video_v1_video_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadInfo) ProtoMessage() {}

func (x *FileUploadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadInfo.ProtoReflect.Descriptor instead.
func (*FileUploadInfo) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{4}
}

func (x *FileUploadInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileUploadInfo) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FileUploadInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileUploadInfo) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

// 文件上传请求 - 专门处理multipart上传
type UploadVideoFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`       // 必需
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`       // 视频标题
	Metadata      *FileMetadata          `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"` // 文件元数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadVideoFileRequest) Reset() {
	*x = UploadVideoFileRequest{}
	mi := &file_video_v1_video_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadVideoFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoFileRequest) ProtoMessage() {}

func (x *UploadVideoFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoFileRequest.ProtoReflect.Descriptor instead.
func (*UploadVideoFileRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{5}
}

func (x *UploadVideoFileRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UploadVideoFileRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadVideoFileRequest) GetMetadata() *FileMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 文件元数据
type FileMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`                                                                     // 文件名
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`                                            // MIME类型
	FileSize      int64                  `protobuf:"varint,3,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`                                                    // 文件大小
	Checksum      string                 `protobuf:"bytes,4,opt,name=checksum,proto3" json:"checksum,omitempty"`                                                                     // 文件校验和（可选）
	Extra         map[string]string      `protobuf:"bytes,5,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 额外信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	mi := &file_video_v1_video_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{6}
}

func (x *FileMetadata) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileMetadata) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FileMetadata) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileMetadata) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

func (x *FileMetadata) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

// 视频上传响应
type PublishVideoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *v1.BaseResponse       `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *PublishVideoData      `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishVideoResponse) Reset() {
	*x = PublishVideoResponse{}
	mi := &file_video_v1_video_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishVideoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishVideoResponse) ProtoMessage() {}

func (x *PublishVideoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishVideoResponse.ProtoReflect.Descriptor instead.
func (*PublishVideoResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{7}
}

func (x *PublishVideoResponse) GetBase() *v1.BaseResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PublishVideoResponse) GetData() *PublishVideoData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PublishVideoData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       int64                  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	UploadId      string                 `protobuf:"bytes,2,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`         // 上传ID
	Status        UploadStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=video.v1.UploadStatus" json:"status,omitempty"` // 上传状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishVideoData) Reset() {
	*x = PublishVideoData{}
	mi := &file_video_v1_video_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishVideoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishVideoData) ProtoMessage() {}

func (x *PublishVideoData) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishVideoData.ProtoReflect.Descriptor instead.
func (*PublishVideoData) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{8}
}

func (x *PublishVideoData) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *PublishVideoData) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *PublishVideoData) GetStatus() UploadStatus {
	if x != nil {
		return x.Status
	}
	return UploadStatus_UPLOAD_STATUS_UNKNOWN
}

// 获取发布列表请求
type GetPublishListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 必需
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 必需
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublishListRequest) Reset() {
	*x = GetPublishListRequest{}
	mi := &file_video_v1_video_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublishListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishListRequest) ProtoMessage() {}

func (x *GetPublishListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishListRequest.ProtoReflect.Descriptor instead.
func (*GetPublishListRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{9}
}

func (x *GetPublishListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPublishListRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 获取发布列表响应
type GetPublishListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *v1.BaseResponse       `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *GetPublishListData    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublishListResponse) Reset() {
	*x = GetPublishListResponse{}
	mi := &file_video_v1_video_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublishListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishListResponse) ProtoMessage() {}

func (x *GetPublishListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishListResponse.ProtoReflect.Descriptor instead.
func (*GetPublishListResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{10}
}

func (x *GetPublishListResponse) GetBase() *v1.BaseResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetPublishListResponse) GetData() *GetPublishListData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPublishListData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoList     []*v1.Video            `protobuf:"bytes,1,rep,name=video_list,json=videoList,proto3" json:"video_list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPublishListData) Reset() {
	*x = GetPublishListData{}
	mi := &file_video_v1_video_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPublishListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublishListData) ProtoMessage() {}

func (x *GetPublishListData) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublishListData.ProtoReflect.Descriptor instead.
func (*GetPublishListData) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{11}
}

func (x *GetPublishListData) GetVideoList() []*v1.Video {
	if x != nil {
		return x.VideoList
	}
	return nil
}

// 获取上传配置请求
type GetUploadConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // 可选
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUploadConfigRequest) Reset() {
	*x = GetUploadConfigRequest{}
	mi := &file_video_v1_video_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUploadConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadConfigRequest) ProtoMessage() {}

func (x *GetUploadConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadConfigRequest.ProtoReflect.Descriptor instead.
func (*GetUploadConfigRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{12}
}

func (x *GetUploadConfigRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 获取上传配置响应
type GetUploadConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *v1.BaseResponse       `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *UploadConfig          `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUploadConfigResponse) Reset() {
	*x = GetUploadConfigResponse{}
	mi := &file_video_v1_video_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUploadConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadConfigResponse) ProtoMessage() {}

func (x *GetUploadConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadConfigResponse.ProtoReflect.Descriptor instead.
func (*GetUploadConfigResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{13}
}

func (x *GetUploadConfigResponse) GetBase() *v1.BaseResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetUploadConfigResponse) GetData() *UploadConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

// 上传配置
type UploadConfig struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	MaxFileSize          int64                  `protobuf:"varint,1,opt,name=max_file_size,json=maxFileSize,proto3" json:"max_file_size,omitempty"`                                                                        // 最大文件大小（字节）
	SupportedFormats     []string               `protobuf:"bytes,2,rep,name=supported_formats,json=supportedFormats,proto3" json:"supported_formats,omitempty"`                                                            // 支持的格式
	ChunkSize            int64                  `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`                                                                                // 分片大小
	EnableResume         bool                   `protobuf:"varint,4,opt,name=enable_resume,json=enableResume,proto3" json:"enable_resume,omitempty"`                                                                       // 是否支持断点续传
	MaxConcurrentUploads int32                  `protobuf:"varint,5,opt,name=max_concurrent_uploads,json=maxConcurrentUploads,proto3" json:"max_concurrent_uploads,omitempty"`                                             // 最大并发上传数
	ExtraConfig          map[string]string      `protobuf:"bytes,6,rep,name=extra_config,json=extraConfig,proto3" json:"extra_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 额外配置
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *UploadConfig) Reset() {
	*x = UploadConfig{}
	mi := &file_video_v1_video_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadConfig) ProtoMessage() {}

func (x *UploadConfig) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadConfig.ProtoReflect.Descriptor instead.
func (*UploadConfig) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{14}
}

func (x *UploadConfig) GetMaxFileSize() int64 {
	if x != nil {
		return x.MaxFileSize
	}
	return 0
}

func (x *UploadConfig) GetSupportedFormats() []string {
	if x != nil {
		return x.SupportedFormats
	}
	return nil
}

func (x *UploadConfig) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *UploadConfig) GetEnableResume() bool {
	if x != nil {
		return x.EnableResume
	}
	return false
}

func (x *UploadConfig) GetMaxConcurrentUploads() int32 {
	if x != nil {
		return x.MaxConcurrentUploads
	}
	return 0
}

func (x *UploadConfig) GetExtraConfig() map[string]string {
	if x != nil {
		return x.ExtraConfig
	}
	return nil
}

// 获取上传进度请求
type GetUploadProgressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"` // 上传ID
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                       // 认证Token
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUploadProgressRequest) Reset() {
	*x = GetUploadProgressRequest{}
	mi := &file_video_v1_video_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUploadProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadProgressRequest) ProtoMessage() {}

func (x *GetUploadProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadProgressRequest.ProtoReflect.Descriptor instead.
func (*GetUploadProgressRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{15}
}

func (x *GetUploadProgressRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *GetUploadProgressRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 获取上传进度响应
type GetUploadProgressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *v1.BaseResponse       `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Data          *UploadProgress        `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUploadProgressResponse) Reset() {
	*x = GetUploadProgressResponse{}
	mi := &file_video_v1_video_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUploadProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUploadProgressResponse) ProtoMessage() {}

func (x *GetUploadProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUploadProgressResponse.ProtoReflect.Descriptor instead.
func (*GetUploadProgressResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{16}
}

func (x *GetUploadProgressResponse) GetBase() *v1.BaseResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GetUploadProgressResponse) GetData() *UploadProgress {
	if x != nil {
		return x.Data
	}
	return nil
}

// 上传进度
type UploadProgress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`                 // 上传ID
	Progress      int32                  `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`                                // 进度百分比 (0-100)
	Status        UploadStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=video.v1.UploadStatus" json:"status,omitempty"`         // 状态
	TotalSize     int64                  `protobuf:"varint,4,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`             // 总大小
	UploadedSize  int64                  `protobuf:"varint,5,opt,name=uploaded_size,json=uploadedSize,proto3" json:"uploaded_size,omitempty"`    // 已上传大小
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`     // 错误信息（如果有）
	EstimatedTime int64                  `protobuf:"varint,7,opt,name=estimated_time,json=estimatedTime,proto3" json:"estimated_time,omitempty"` // 预估剩余时间（秒）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadProgress) Reset() {
	*x = UploadProgress{}
	mi := &file_video_v1_video_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadProgress) ProtoMessage() {}

func (x *UploadProgress) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadProgress.ProtoReflect.Descriptor instead.
func (*UploadProgress) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{17}
}

func (x *UploadProgress) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *UploadProgress) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *UploadProgress) GetStatus() UploadStatus {
	if x != nil {
		return x.Status
	}
	return UploadStatus_UPLOAD_STATUS_UNKNOWN
}

func (x *UploadProgress) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *UploadProgress) GetUploadedSize() int64 {
	if x != nil {
		return x.UploadedSize
	}
	return 0
}

func (x *UploadProgress) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *UploadProgress) GetEstimatedTime() int64 {
	if x != nil {
		return x.EstimatedTime
	}
	return 0
}

// gRPC内部调用 - 获取视频信息请求
type GetVideoInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       int64                  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoInfoRequest) Reset() {
	*x = GetVideoInfoRequest{}
	mi := &file_video_v1_video_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoRequest) ProtoMessage() {}

func (x *GetVideoInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVideoInfoRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{18}
}

func (x *GetVideoInfoRequest) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

// gRPC内部调用 - 获取视频信息响应
type GetVideoInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Video         *v1.Video              `protobuf:"bytes,1,opt,name=video,proto3" json:"video,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideoInfoResponse) Reset() {
	*x = GetVideoInfoResponse{}
	mi := &file_video_v1_video_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideoInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoResponse) ProtoMessage() {}

func (x *GetVideoInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVideoInfoResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{19}
}

func (x *GetVideoInfoResponse) GetVideo() *v1.Video {
	if x != nil {
		return x.Video
	}
	return nil
}

// gRPC内部调用 - 批量获取视频信息请求
type GetVideosInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoIds      []int64                `protobuf:"varint,1,rep,packed,name=video_ids,json=videoIds,proto3" json:"video_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideosInfoRequest) Reset() {
	*x = GetVideosInfoRequest{}
	mi := &file_video_v1_video_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideosInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideosInfoRequest) ProtoMessage() {}

func (x *GetVideosInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideosInfoRequest.ProtoReflect.Descriptor instead.
func (*GetVideosInfoRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{20}
}

func (x *GetVideosInfoRequest) GetVideoIds() []int64 {
	if x != nil {
		return x.VideoIds
	}
	return nil
}

// gRPC内部调用 - 批量获取视频信息响应
type GetVideosInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Videos        []*v1.Video            `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVideosInfoResponse) Reset() {
	*x = GetVideosInfoResponse{}
	mi := &file_video_v1_video_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVideosInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideosInfoResponse) ProtoMessage() {}

func (x *GetVideosInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideosInfoResponse.ProtoReflect.Descriptor instead.
func (*GetVideosInfoResponse) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{21}
}

func (x *GetVideosInfoResponse) GetVideos() []*v1.Video {
	if x != nil {
		return x.Videos
	}
	return nil
}

// gRPC内部调用 - 更新视频统计请求
type UpdateVideoStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VideoId       int64                  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Type          UpdateVideoStatsType   `protobuf:"varint,2,opt,name=type,proto3,enum=video.v1.UpdateVideoStatsType" json:"type,omitempty"`
	Count         int64                  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`                 // 变化数量，可为负数
	UserId        int64                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 操作用户ID（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVideoStatsRequest) Reset() {
	*x = UpdateVideoStatsRequest{}
	mi := &file_video_v1_video_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVideoStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVideoStatsRequest) ProtoMessage() {}

func (x *UpdateVideoStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_v1_video_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVideoStatsRequest.ProtoReflect.Descriptor instead.
func (*UpdateVideoStatsRequest) Descriptor() ([]byte, []int) {
	return file_video_v1_video_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateVideoStatsRequest) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *UpdateVideoStatsRequest) GetType() UpdateVideoStatsType {
	if x != nil {
		return x.Type
	}
	return UpdateVideoStatsType_UPDATE_VIDEO_STATS_UNKNOWN
}

func (x *UpdateVideoStatsRequest) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *UpdateVideoStatsRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

var File_video_v1_video_proto protoreflect.FileDescriptor

const file_video_v1_video_proto_rawDesc = "" +
	"\n" +
	"\x14video/v1/video.proto\x12\bvideo.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x16common/v1/common.proto\"G\n" +
	"\x0eGetFeedRequest\x12\x1f\n" +
	"\vlatest_time\x18\x01 \x01(\x03R\n" +
	"latestTime\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"i\n" +
	"\x0fGetFeedResponse\x12+\n" +
	"\x04base\x18\x01 \x01(\v2\x17.common.v1.BaseResponseR\x04base\x12)\n" +
	"\x04data\x18\x02 \x01(\v2\x15.video.v1.GetFeedDataR\x04data\"[\n" +
	"\vGetFeedData\x12\x1b\n" +
	"\tnext_time\x18\x01 \x01(\x03R\bnextTime\x12/\n" +
	"\n" +
	"video_list\x18\x02 \x03(\v2\x10.common.v1.VideoR\tvideoList\"\x9f\x01\n" +
	"\x13PublishVideoRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\x14\n" +
	"\x04data\x18\x02 \x01(\fH\x00R\x04data\x127\n" +
	"\tfile_info\x18\x03 \x01(\v2\x18.video.v1.FileUploadInfoH\x00R\bfileInfo\x12\x14\n" +
	"\x05title\x18\x04 \x01(\tR\x05titleB\r\n" +
	"\vdata_source\"\x89\x01\n" +
	"\x0eFileUploadInfo\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1b\n" +
	"\tfile_size\x18\x03 \x01(\x03R\bfileSize\x12\x1b\n" +
	"\tupload_id\x18\x04 \x01(\tR\buploadId\"x\n" +
	"\x16UploadVideoFileRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x122\n" +
	"\bmetadata\x18\x03 \x01(\v2\x16.video.v1.FileMetadataR\bmetadata\"\xf9\x01\n" +
	"\fFileMetadata\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12\x1b\n" +
	"\tfile_size\x18\x03 \x01(\x03R\bfileSize\x12\x1a\n" +
	"\bchecksum\x18\x04 \x01(\tR\bchecksum\x127\n" +
	"\x05extra\x18\x05 \x03(\v2!.video.v1.FileMetadata.ExtraEntryR\x05extra\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"s\n" +
	"\x14PublishVideoResponse\x12+\n" +
	"\x04base\x18\x01 \x01(\v2\x17.common.v1.BaseResponseR\x04base\x12.\n" +
	"\x04data\x18\x02 \x01(\v2\x1a.video.v1.PublishVideoDataR\x04data\"z\n" +
	"\x10PublishVideoData\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\x03R\avideoId\x12\x1b\n" +
	"\tupload_id\x18\x02 \x01(\tR\buploadId\x12.\n" +
	"\x06status\x18\x03 \x01(\x0e2\x16.video.v1.UploadStatusR\x06status\"F\n" +
	"\x15GetPublishListRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"w\n" +
	"\x16GetPublishListResponse\x12+\n" +
	"\x04base\x18\x01 \x01(\v2\x17.common.v1.BaseResponseR\x04base\x120\n" +
	"\x04data\x18\x02 \x01(\v2\x1c.video.v1.GetPublishListDataR\x04data\"E\n" +
	"\x12GetPublishListData\x12/\n" +
	"\n" +
	"video_list\x18\x01 \x03(\v2\x10.common.v1.VideoR\tvideoList\".\n" +
	"\x16GetUploadConfigRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"r\n" +
	"\x17GetUploadConfigResponse\x12+\n" +
	"\x04base\x18\x01 \x01(\v2\x17.common.v1.BaseResponseR\x04base\x12*\n" +
	"\x04data\x18\x02 \x01(\v2\x16.video.v1.UploadConfigR\x04data\"\xe5\x02\n" +
	"\fUploadConfig\x12\"\n" +
	"\rmax_file_size\x18\x01 \x01(\x03R\vmaxFileSize\x12+\n" +
	"\x11supported_formats\x18\x02 \x03(\tR\x10supportedFormats\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x03 \x01(\x03R\tchunkSize\x12#\n" +
	"\renable_resume\x18\x04 \x01(\bR\fenableResume\x124\n" +
	"\x16max_concurrent_uploads\x18\x05 \x01(\x05R\x14maxConcurrentUploads\x12J\n" +
	"\fextra_config\x18\x06 \x03(\v2'.video.v1.UploadConfig.ExtraConfigEntryR\vextraConfig\x1a>\n" +
	"\x10ExtraConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"M\n" +
	"\x18GetUploadProgressRequest\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"v\n" +
	"\x19GetUploadProgressResponse\x12+\n" +
	"\x04base\x18\x01 \x01(\v2\x17.common.v1.BaseResponseR\x04base\x12,\n" +
	"\x04data\x18\x02 \x01(\v2\x18.video.v1.UploadProgressR\x04data\"\x89\x02\n" +
	"\x0eUploadProgress\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x1a\n" +
	"\bprogress\x18\x02 \x01(\x05R\bprogress\x12.\n" +
	"\x06status\x18\x03 \x01(\x0e2\x16.video.v1.UploadStatusR\x06status\x12\x1d\n" +
	"\n" +
	"total_size\x18\x04 \x01(\x03R\ttotalSize\x12#\n" +
	"\ruploaded_size\x18\x05 \x01(\x03R\fuploadedSize\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x12%\n" +
	"\x0eestimated_time\x18\a \x01(\x03R\restimatedTime\"0\n" +
	"\x13GetVideoInfoRequest\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\x03R\avideoId\">\n" +
	"\x14GetVideoInfoResponse\x12&\n" +
	"\x05video\x18\x01 \x01(\v2\x10.common.v1.VideoR\x05video\"3\n" +
	"\x14GetVideosInfoRequest\x12\x1b\n" +
	"\tvideo_ids\x18\x01 \x03(\x03R\bvideoIds\"A\n" +
	"\x15GetVideosInfoResponse\x12(\n" +
	"\x06videos\x18\x01 \x03(\v2\x10.common.v1.VideoR\x06videos\"\x97\x01\n" +
	"\x17UpdateVideoStatsRequest\x12\x19\n" +
	"\bvideo_id\x18\x01 \x01(\x03R\avideoId\x122\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1e.video.v1.UpdateVideoStatsTypeR\x04type\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x03R\x05count\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\x03R\x06userId*\x9b\x01\n" +
	"\fUploadStatus\x12\x19\n" +
	"\x15UPLOAD_STATUS_UNKNOWN\x10\x00\x12\x1b\n" +
	"\x17UPLOAD_STATUS_UPLOADING\x10\x01\x12\x1c\n" +
	"\x18UPLOAD_STATUS_PROCESSING\x10\x02\x12\x1b\n" +
	"\x17UPLOAD_STATUS_COMPLETED\x10\x03\x12\x18\n" +
	"\x14UPLOAD_STATUS_FAILED\x10\x04*\xca\x01\n" +
	"\x14UpdateVideoStatsType\x12\x1e\n" +
	"\x1aUPDATE_VIDEO_STATS_UNKNOWN\x10\x00\x12%\n" +
	"!UPDATE_VIDEO_STATS_FAVORITE_COUNT\x10\x01\x12$\n" +
	" UPDATE_VIDEO_STATS_COMMENT_COUNT\x10\x02\x12!\n" +
	"\x1dUPDATE_VIDEO_STATS_PLAY_COUNT\x10\x03\x12\"\n" +
	"\x1eUPDATE_VIDEO_STATS_SHARE_COUNT\x10\x042\xcf\a\n" +
	"\fVideoService\x12T\n" +
	"\aGetFeed\x12\x18.video.v1.GetFeedRequest\x1a\x19.video.v1.GetFeedResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/douyin/feed\x12\x8a\x01\n" +
	"\fPublishVideo\x12\x1d.video.v1.PublishVideoRequest\x1a\x1e.video.v1.PublishVideoResponse\";\x82\xd3\xe4\x93\x025:\x01*Z\x18\"\x16/douyin/publish/action\"\x16/douyin/publish/action\x12v\n" +
	"\x0fUploadVideoFile\x12 .video.v1.UploadVideoFileRequest\x1a\x1e.video.v1.PublishVideoResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*\"\x16/douyin/publish/upload\x12q\n" +
	"\x0eGetPublishList\x12\x1f.video.v1.GetPublishListRequest\x1a .video.v1.GetPublishListResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/douyin/publish/list\x12u\n" +
	"\x0fGetUploadConfig\x12 .video.v1.GetUploadConfigRequest\x1a!.video.v1.GetUploadConfigResponse\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/douyin/upload/config\x12\x89\x01\n" +
	"\x11GetUploadProgress\x12\".video.v1.GetUploadProgressRequest\x1a#.video.v1.GetUploadProgressResponse\"+\x82\xd3\xe4\x93\x02%\x12#/douyin/upload/progress/{upload_id}\x12M\n" +
	"\fGetVideoInfo\x12\x1d.video.v1.GetVideoInfoRequest\x1a\x1e.video.v1.GetVideoInfoResponse\x12P\n" +
	"\rGetVideosInfo\x12\x1e.video.v1.GetVideosInfoRequest\x1a\x1f.video.v1.GetVideosInfoResponse\x12M\n" +
	"\x10UpdateVideoStats\x12!.video.v1.UpdateVideoStatsRequest\x1a\x16.google.protobuf.EmptyB\x1cZ\x1ago-backend/api/video/v1;v1b\x06proto3"

var (
	file_video_v1_video_proto_rawDescOnce sync.Once
	file_video_v1_video_proto_rawDescData []byte
)

func file_video_v1_video_proto_rawDescGZIP() []byte {
	file_video_v1_video_proto_rawDescOnce.Do(func() {
		file_video_v1_video_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_video_v1_video_proto_rawDesc), len(file_video_v1_video_proto_rawDesc)))
	})
	return file_video_v1_video_proto_rawDescData
}

var file_video_v1_video_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_video_v1_video_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_video_v1_video_proto_goTypes = []any{
	(UploadStatus)(0),                 // 0: video.v1.UploadStatus
	(UpdateVideoStatsType)(0),         // 1: video.v1.UpdateVideoStatsType
	(*GetFeedRequest)(nil),            // 2: video.v1.GetFeedRequest
	(*GetFeedResponse)(nil),           // 3: video.v1.GetFeedResponse
	(*GetFeedData)(nil),               // 4: video.v1.GetFeedData
	(*PublishVideoRequest)(nil),       // 5: video.v1.PublishVideoRequest
	(*FileUploadInfo)(nil),            // 6: video.v1.FileUploadInfo
	(*UploadVideoFileRequest)(nil),    // 7: video.v1.UploadVideoFileRequest
	(*FileMetadata)(nil),              // 8: video.v1.FileMetadata
	(*PublishVideoResponse)(nil),      // 9: video.v1.PublishVideoResponse
	(*PublishVideoData)(nil),          // 10: video.v1.PublishVideoData
	(*GetPublishListRequest)(nil),     // 11: video.v1.GetPublishListRequest
	(*GetPublishListResponse)(nil),    // 12: video.v1.GetPublishListResponse
	(*GetPublishListData)(nil),        // 13: video.v1.GetPublishListData
	(*GetUploadConfigRequest)(nil),    // 14: video.v1.GetUploadConfigRequest
	(*GetUploadConfigResponse)(nil),   // 15: video.v1.GetUploadConfigResponse
	(*UploadConfig)(nil),              // 16: video.v1.UploadConfig
	(*GetUploadProgressRequest)(nil),  // 17: video.v1.GetUploadProgressRequest
	(*GetUploadProgressResponse)(nil), // 18: video.v1.GetUploadProgressResponse
	(*UploadProgress)(nil),            // 19: video.v1.UploadProgress
	(*GetVideoInfoRequest)(nil),       // 20: video.v1.GetVideoInfoRequest
	(*GetVideoInfoResponse)(nil),      // 21: video.v1.GetVideoInfoResponse
	(*GetVideosInfoRequest)(nil),      // 22: video.v1.GetVideosInfoRequest
	(*GetVideosInfoResponse)(nil),     // 23: video.v1.GetVideosInfoResponse
	(*UpdateVideoStatsRequest)(nil),   // 24: video.v1.UpdateVideoStatsRequest
	nil,                               // 25: video.v1.FileMetadata.ExtraEntry
	nil,                               // 26: video.v1.UploadConfig.ExtraConfigEntry
	(*v1.BaseResponse)(nil),           // 27: common.v1.BaseResponse
	(*v1.Video)(nil),                  // 28: common.v1.Video
	(*emptypb.Empty)(nil),             // 29: google.protobuf.Empty
}
var file_video_v1_video_proto_depIdxs = []int32{
	27, // 0: video.v1.GetFeedResponse.base:type_name -> common.v1.BaseResponse
	4,  // 1: video.v1.GetFeedResponse.data:type_name -> video.v1.GetFeedData
	28, // 2: video.v1.GetFeedData.video_list:type_name -> common.v1.Video
	6,  // 3: video.v1.PublishVideoRequest.file_info:type_name -> video.v1.FileUploadInfo
	8,  // 4: video.v1.UploadVideoFileRequest.metadata:type_name -> video.v1.FileMetadata
	25, // 5: video.v1.FileMetadata.extra:type_name -> video.v1.FileMetadata.ExtraEntry
	27, // 6: video.v1.PublishVideoResponse.base:type_name -> common.v1.BaseResponse
	10, // 7: video.v1.PublishVideoResponse.data:type_name -> video.v1.PublishVideoData
	0,  // 8: video.v1.PublishVideoData.status:type_name -> video.v1.UploadStatus
	27, // 9: video.v1.GetPublishListResponse.base:type_name -> common.v1.BaseResponse
	13, // 10: video.v1.GetPublishListResponse.data:type_name -> video.v1.GetPublishListData
	28, // 11: video.v1.GetPublishListData.video_list:type_name -> common.v1.Video
	27, // 12: video.v1.GetUploadConfigResponse.base:type_name -> common.v1.BaseResponse
	16, // 13: video.v1.GetUploadConfigResponse.data:type_name -> video.v1.UploadConfig
	26, // 14: video.v1.UploadConfig.extra_config:type_name -> video.v1.UploadConfig.ExtraConfigEntry
	27, // 15: video.v1.GetUploadProgressResponse.base:type_name -> common.v1.BaseResponse
	19, // 16: video.v1.GetUploadProgressResponse.data:type_name -> video.v1.UploadProgress
	0,  // 17: video.v1.UploadProgress.status:type_name -> video.v1.UploadStatus
	28, // 18: video.v1.GetVideoInfoResponse.video:type_name -> common.v1.Video
	28, // 19: video.v1.GetVideosInfoResponse.videos:type_name -> common.v1.Video
	1,  // 20: video.v1.UpdateVideoStatsRequest.type:type_name -> video.v1.UpdateVideoStatsType
	2,  // 21: video.v1.VideoService.GetFeed:input_type -> video.v1.GetFeedRequest
	5,  // 22: video.v1.VideoService.PublishVideo:input_type -> video.v1.PublishVideoRequest
	7,  // 23: video.v1.VideoService.UploadVideoFile:input_type -> video.v1.UploadVideoFileRequest
	11, // 24: video.v1.VideoService.GetPublishList:input_type -> video.v1.GetPublishListRequest
	14, // 25: video.v1.VideoService.GetUploadConfig:input_type -> video.v1.GetUploadConfigRequest
	17, // 26: video.v1.VideoService.GetUploadProgress:input_type -> video.v1.GetUploadProgressRequest
	20, // 27: video.v1.VideoService.GetVideoInfo:input_type -> video.v1.GetVideoInfoRequest
	22, // 28: video.v1.VideoService.GetVideosInfo:input_type -> video.v1.GetVideosInfoRequest
	24, // 29: video.v1.VideoService.UpdateVideoStats:input_type -> video.v1.UpdateVideoStatsRequest
	3,  // 30: video.v1.VideoService.GetFeed:output_type -> video.v1.GetFeedResponse
	9,  // 31: video.v1.VideoService.PublishVideo:output_type -> video.v1.PublishVideoResponse
	9,  // 32: video.v1.VideoService.UploadVideoFile:output_type -> video.v1.PublishVideoResponse
	12, // 33: video.v1.VideoService.GetPublishList:output_type -> video.v1.GetPublishListResponse
	15, // 34: video.v1.VideoService.GetUploadConfig:output_type -> video.v1.GetUploadConfigResponse
	18, // 35: video.v1.VideoService.GetUploadProgress:output_type -> video.v1.GetUploadProgressResponse
	21, // 36: video.v1.VideoService.GetVideoInfo:output_type -> video.v1.GetVideoInfoResponse
	23, // 37: video.v1.VideoService.GetVideosInfo:output_type -> video.v1.GetVideosInfoResponse
	29, // 38: video.v1.VideoService.UpdateVideoStats:output_type -> google.protobuf.Empty
	30, // [30:39] is the sub-list for method output_type
	21, // [21:30] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_video_v1_video_proto_init() }
func file_video_v1_video_proto_init() {
	if File_video_v1_video_proto != nil {
		return
	}
	file_video_v1_video_proto_msgTypes[3].OneofWrappers = []any{
		(*PublishVideoRequest_Data)(nil),
		(*PublishVideoRequest_FileInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_video_v1_video_proto_rawDesc), len(file_video_v1_video_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_v1_video_proto_goTypes,
		DependencyIndexes: file_video_v1_video_proto_depIdxs,
		EnumInfos:         file_video_v1_video_proto_enumTypes,
		MessageInfos:      file_video_v1_video_proto_msgTypes,
	}.Build()
	File_video_v1_video_proto = out.File
	file_video_v1_video_proto_goTypes = nil
	file_video_v1_video_proto_depIdxs = nil
}
